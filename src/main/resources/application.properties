
# the name of Camel
camel.springboot.name = camel-helloworld

# what to say
greeting = Hello World!

# how often to trigger the timer
timer.period = 2000

# to automatic shutdown the JVM after a period of time
#camel.springboot.duration-max-seconds=60
#camel.springboot.duration-max-messages=100

# add for example: &repeatCount=5 to the timer endpoint to make Camel idle
#camel.springboot.duration-max-idle-seconds=15

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=info,health,camelroutes,hawtio,jolokia,shutdown

# turn on actuator health check
management.endpoint.health.enabled = true

# allow to obtain basic information about camel routes (read only mode)
management.endpoint.camelroutes.enabled = true
management.endpoint.camelroutes.read-only = true

# to configure logging levels
#logging.level.org.springframework = INFO
#logging.level.org.apache.camel.spring.boot = INFO
#logging.level.org.apache.camel.impl = DEBUG
#logging.level.sample.camel = DEBUG

server.address=0.0.0.0
server.port=10000
management.address=0.0.0.0
management.port=18081
management.server.port=10001

# Adding SameSite=Strict for session cookie is recommended
server.servlet.session.cookie.same-site=strict

endpoints.enabled = true
endpoints.health.enabled = true

# Information for Spring Boot Info endpoint
management.info.env.enabled=true
management.info.java.enabled=true
info.app.name=Hello World

spring.jmx.enabled=true

logging.level.io.hawt=INFO
logging.level.org.springframework=INFO
logging.level.io.undertow=INFO
logging.level.org.apache.camel.component.servlet=INFO

# Uncomment these properties to enable the Camel plugin Trace tab
camel.springboot.tracing=false
camel.springboot.backlog-tracing=false
camel.springboot.use-breadcrumb=false

quartz.cron = 0/10 * * * * ?
quartz.repeatInterval = 10000

hawtio.authenticationEnabled=false

#
# Enable shutdown actuator endpoint
#
management.endpoint.shutdown.enabled=true
endpoints.shutdown.enabled=true

#
# Hawtio properties to change the behaviours for HTTP headers
# (Hawtio version >2.15.1)
#

# By default Access-Control-Allow-Origin is no more sent.
# To send the HTTP header, uncomment the following line.
#hawtio.http.enableCORS=true

# When hawtio.http.enableCORS=true is set, Hawtio by default sends:
#
#   Access-Control-Allow-Origin: *
#
# You can customise the header value with the following property.
#hawtio.http.accessControlAllowOrigin=https://example.com

# By default Hawtio sends the following HTTP headers:
#
#   X-Frame-Options: DENY
#   Content-Security-Policy: frame-ancestors 'none'
#
# By uncommenting the following line, these headers are changed like these
# (the behaviour in 2.15.1 and before):
#
#   X-Frame-Options: SAMEORIGIN
#   Content-Security-Policy: frame-ancestors 'self'
#
#hawtio.http.allowXFrameSameOrigin=true

# By default Hawtio sends the following HTTP header:
#
#   Referrer-Policy: strict-origin
#
# You can customise the header by setting the following property.
#hawtio.http.referrerPolicy=no-referrer

# Pretty-print JSON responses
spring.jackson.serialization.indent_output=true
